---
title: "A Global View of Violenace Against Aid Effort Organizations"
author: "lh1078"
format:
  html:
    embedded-resources: False
---

## The Global Landscape of Violence

Humanitarian workers face threats in every corner of the world. They provide shelter, support and care for people in need, but they also put themselves in serious danger. By visualizing global incidents on the world map, it helps uncover where the risks are most concentrated. 

```{python}
#| echo: true
#| code-fold: true

import altair as alt
from vega_datasets import data
import pandas as pd
import numpy as np

df = pd.read_csv('./security_incidents.csv')

country_counts = df.groupby('Country').agg({
    'Incident ID': 'count',
    'Latitude': 'mean',
    'Longitude': 'mean'
}).reset_index().rename(columns={'Incident ID': 'Incident Count'})

# Load world map data
world_map = alt.topo_feature('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json', 'countries')

# base map
base = alt.Chart(world_map).mark_geoshape(
    fill='lightgray',
    stroke='white'
).properties(
    width=700,
    height=500
).project('equalEarth')

# bubbles sized by incident count
bubbles = alt.Chart(country_counts).mark_circle(opacity=0.6, color='firebrick').encode(
    longitude='Longitude:Q',
    latitude='Latitude:Q',
    size=alt.Size('Incident Count:Q', scale=alt.Scale(range=[10, 1000]), legend=alt.Legend(title="Incident Count")),
    tooltip=['Country:N', 'Incident Count:Q']
)

chart = base + bubbles
chart

```

On the world map, a striking pattern emerges: a huge concentration of security incidents in **Central Africa** and the **Middle East**. These regions stand out as hotspots, where humanitarian workers face heightened and ongoing threats. 

Smaller but still notable clusters appear in **Southern Africa**, **Central and South America**, and parts of **Southeast Asia**, suggesting that violence against aid workers is not isolated to a single region but is instead a global concern. 

In contrast, well-developed regions such as **East Asia**, **Western Europe**, and **North America** show very few or no reported incidents. This stark disparity underscores how instability, conflict, and weak infrastructure contribute significantly to the vulnerability of humanitarian operations. It also suggests that the risks to aid workers are highly context-dependent, often concentrated in areas where support is most desperately needed — but least secure.

## Who Are the Victims?

The dots on the world map shows are generated by individuals who are aid workers, staff, volunteers whose lives might forever changed. This section breaks down and look in to different human toll by organizations: nationals and internations, male, female and whose indentities remain unreported.

### Nationals v.s Internationals

```{python}
#| echo: true
#| code-fold: true

national_cols = ['Nationals killed', 'Nationals wounded', 'Nationals kidnapped']
intl_cols = ['Internationals killed', 'Internationals wounded', 'Internationals kidnapped']
org_cols = ['UN', 'INGO', 'ICRC', 'NRCS and IFRC', 'NNGO', 'Other']

df_org = df[org_cols + national_cols + intl_cols].copy()

df_org['Incident ID'] = df.index

impact_long = df_org.melt(
    id_vars=['Incident ID'] + org_cols,
    value_vars=national_cols + intl_cols,
    var_name='Impact Type',
    value_name='Count'
)

impact_long = impact_long[impact_long['Count'].fillna(0) > 0]

# Tag impact as National/International
impact_long['Group'] = impact_long['Impact Type'].apply(
    lambda x: 'Nationals' if 'Nationals' in x else 'Internationals'
)

impact_long = impact_long.melt(
    id_vars=['Incident ID', 'Impact Type', 'Count', 'Group'],
    value_vars=org_cols,
    var_name='Organization',
    value_name='Involved'
)

# Keep rows where the org was actually involved
impact_long = impact_long[impact_long['Involved'] == 1]

grouped = impact_long.groupby(['Organization', 'Group', 'Impact Type']).agg({'Count': 'sum'}).reset_index()

# Simplify impact type (remove group prefix)
impact_long['Impact Simple'] = impact_long['Impact Type'].str.extract(r'(killed|wounded|kidnapped)', expand=False).str.capitalize()

stacked_data = impact_long.groupby(['Organization', 'Group', 'Impact Simple']).agg({'Count': 'sum'}).reset_index()


chart = alt.Chart(stacked_data).mark_bar().encode(
    x=alt.X('Organization:N', title='Organization'),
    y=alt.Y('Count:Q', title='Total Casualties'),
    color=alt.Color('Impact Simple:N', title='Impact Type', scale=alt.Scale(scheme='set2')),
    xOffset=alt.XOffset('Group:N', title='Group'),
    tooltip=['Organization:N', 'Group:N', 'Impact Simple:N', 'Count:Q']
).properties(
    width=600,
    height=400,
    title='Casualties by Organization (Nationals vs Internationals)'
)

chart

```

The stacked bar chart shows a stark imbalance in the impact of security incidents across different types of organizations. **INGO (International Non-Governmental Organization)** organizations have borne the highest toll, accumulating the greatest number of casualties among both nationals and internationals. 

**NNGO (Non-Governmental Organization)** organizations and **UN (United Nations)** System also experienced significant losses over time. NNGO workers even encounter higher percentage of getting killed in an incident than get wounded. 

### Male v.s Female

```{python}
#| echo: true
#| code-fold: true

gender_counts = df[['Gender Male', 'Gender Female', 'Gender Unknown']].sum().reset_index()
gender_counts.columns = ['Gender', 'Count']
gender_counts['Gender'] = gender_counts['Gender'].str.replace('Gender ', '')
gender_counts['Percent'] = gender_counts['Count'] / gender_counts['Count'].sum() * 100

# Floor the percentages
gender_counts['Icons'] = np.floor(gender_counts['Percent']).astype(int)

# Calculate how many icons we're short
icons_needed = 100 - gender_counts['Icons'].sum()

# Compute fractional parts to distribute remaining icons
gender_counts['Fraction'] = gender_counts['Percent'] - gender_counts['Icons']

# Add 1 icon to the rows with largest fractional parts
gender_counts.loc[gender_counts.sort_values('Fraction', ascending=False).head(icons_needed).index, 'Icons'] += 1

gender_counts['Label'] = gender_counts.apply(
    lambda row: f"⬤ {row['Gender']}: {row['Percent']:.1f}%", axis=1
)

# Drop helper column
gender_counts.drop(columns='Fraction', inplace=True)

assert gender_counts['Icons'].sum() == 100

# Expand to one row per icon
icons_df = gender_counts.loc[gender_counts.index.repeat(gender_counts['Icons'])].reset_index(drop=True)

# Position in a 10x10 grid
icons_df['Index'] = icons_df.index
icons_df['Column'] = icons_df['Index'] % 10
icons_df['Row'] = icons_df['Index'] // 10
icons_df['Icon'] = '⬤'

label_chart = alt.Chart(gender_counts).mark_text(
    align='left',
    fontSize=13
).encode(
    y=alt.Y('Gender:N', axis=None),
    text='Label:N',
    color=alt.Color('Gender:N', legend=None)
).properties(
    width=300,
    height=60
)

chart = alt.Chart(icons_df).mark_text(fontSize=20).encode(
    x=alt.X('Column:O', axis=None),
    y=alt.Y('Row:O', axis=None),
    text='Icon:N',
    color=alt.Color(
        'Gender:N', 
        title='Gender',
        scale= alt.Scale(
            domain=['Male', 'Female', 'Unknown'],
            range=['steelblue', 'crimson', 'gray']
        ))
).properties(
    width=400,
    height=200,
    title='Gender Distribution of Victims'
)

final_chart = alt.vconcat(
    chart,         
    label_chart  
).configure_view(
    stroke=None
)

final_chart
```

Beyond the citizenship of the victims, the isotype plot highlights the gender distribution of those affected by security incidents. Male victims account for nearly half of the total (47.2%), while female victims make up a notably small share — only around 7.4%.

Perhaps most strikingly, the number of victims whose gender identities were not reported is nearly as high as that of male victims. This substantial "unknown" category suggests not only gaps in data collection, but also raises concerns about the invisibility of certain populations in reporting and recordkeeping.

## Organizations Under Fire Over time

Followed by the previous section, it is obvious that security incidents don't occur in isolation, they target specific organizations. Taking a closer look at the trends over time, we can see the trends of different organizations being affected. International NGOs, UN agencies, and local nonprofits all face varying levels of threat.

```{python}
#| echo: true
#| code-fold: true

# Select organization columns + Year
org_cols = ['UN', 'INGO', 'ICRC', 'NRCS and IFRC', 'NNGO', 'Other']
df['Year'] = pd.to_numeric(df['Year'], errors='coerce')
org_data = df[['Year'] + org_cols].copy()

# Melt to long format
org_long = org_data.melt(id_vars='Year', var_name='Organization', value_name='Attacked')

# Keep only incidents where that org was attacked (i.e., value == 1)
org_long = org_long[org_long['Attacked'] == 1]

# Group by Year and Organization
org_counts = org_long.groupby(['Year', 'Organization']).size().reset_index(name='Incident Count')

chart = alt.Chart(org_counts).mark_line(point=True).encode(
    x=alt.X('Year:O', title='Year'),
    y=alt.Y('Incident Count:Q', title='Incidents'),
    color=alt.Color('Organization:N', title='Organization'),
    tooltip=['Year:O', 'Organization:N', 'Incident Count:Q']
).properties(
    width=600,
    height=400,
    title='Organization Attacks Over Time'
)

chart

```

When examining how different organizations have been targeted over time, a clear shift emerges. Prior to 2005, reported incidents across all organizations were relatively low, only mild rises. However, from 2005 to 2009, there is an increase in attacks, espacially targeting the INGOs. The number of attacks fluctuate for the next 6 years but still remaining high, with a spike in 2013, when conflicts against NNGO hit a peak. Around 2017, a second surge begins, with incidents spiking and staying elevated through 2020. Almost all kinds of organizations face an increasing threat of attacks. This ongoing escalation raises urgent concerns about global security and the safety of humanitarian personnel operating in high-risk areas.

## When Do Incidents Occur?

From the previous section, we can tell that time reveals rhythms and it can reflect factors that might affect the incidents. So at this section, we will focus on the time attributes. Are attacks seasonal? Do they spike during certain political evnts or humanitarian crisis? This part uses a calendar-style heatmap and yearly/ monthly bar plots to uncover temporal patterns in violence and a world map with a slider to view yearly incidents geographically.

```{python}
#| echo: true
#| code-fold: true

heatmap_data = df.groupby(['Year', 'Month']).size().reset_index(name='Incident Count')

year_totals = df.groupby('Year').size().reset_index(name='Total Incidents')
month_totals = df.groupby('Month').size().reset_index(name='Total Incidents')
month_order = list(range(1, 13))

# --- Heatmap: center
heatmap = alt.Chart(heatmap_data).mark_rect().encode(
    x=alt.X('Year:O', title='Year'),
    y=alt.Y('Month:O', sort=month_order, title='Month'),
    color=alt.Color('Incident Count:Q', scale=alt.Scale(scheme='reds'), title='Incidents'),
    tooltip=['Year:O', 'Month:O', 'Incident Count:Q']
).properties(width=500, height=300)

# --- Transparent spacer (dummy chart to offset left)
spacer = alt.Chart(pd.DataFrame({'x': [0]})).mark_point(opacity=0).encode(
    x=alt.X('x:Q', axis=None)
).properties(width=100, height=100)
  # width must match left_bar

# --- Top bar chart: Incidents by Year (aligned with heatmap x-axis)
top_bar = alt.Chart(year_totals).mark_bar(color='steelblue').encode(
    x=alt.X('Year:O', title=None),  # Must match heatmap x
    y=alt.Y('Total Incidents:Q', title='Incidents')
).properties(width=500, height=100)

# --- Left bar chart: Incidents by Month (flipped to match heatmap y-axis)
left_bar = alt.Chart(month_totals).mark_bar(color='steelblue').encode(
    y=alt.Y('Month:O', sort=month_order, title=None),  # Must match heatmap y
    x=alt.X('Total Incidents:Q', title='Incidents', scale=alt.Scale(reverse=True))  # Reverse for 180 flip
).properties(width=100, height=300)

# --- Middle row: left + heatmap
middle = alt.hconcat(
    left_bar,
    heatmap
).resolve_scale(
    y='shared'
)

top_row = alt.hconcat(
    spacer,
    top_bar
)

# top + (left + heatmap)
final_chart = alt.vconcat(
    top_row,
    middle
).resolve_scale(
    x='shared'
).configure_view(
    stroke=None  # Remove borders from all charts
)

final_chart
```

First, take a look at the calendar-style heatmap. The darker cells tend to cluster toward the right side of the plot, especially in recent years, reflecting a rising alert level around global security incidents. This increasing density of reported attacks indicates that aid workers are operating under growing pressure and threat, particularly in more volatile regions.

The data pinpoints October 2024 as the peak month for reported incidents, closely followed by May and June 2024, and a significant spike in July 2019. These dates prompt questions about what was happening globally at those times.

```{python}
#| echo: true
#| code-fold: true

world_map = alt.topo_feature(data.world_110m.url, 'countries')

yearly_counts = df.groupby(['Year', 'Country']).agg({
    'Incident ID': 'count',
    'Latitude': 'mean',
    'Longitude': 'mean'
}).reset_index().rename(columns={'Incident ID': 'Incident Count'})

# Slider for Year
year_slider = alt.binding_range(min=yearly_counts['Year'].min(), max=yearly_counts['Year'].max(), step=1)
year_select = alt.param(name='Year', bind=year_slider, value=int(yearly_counts['Year'].min()))

base = alt.Chart(world_map).mark_geoshape(
    fill='lightgray', stroke='white'
).project('equalEarth').properties(width=700, height=500)

year_bubbles = alt.Chart(yearly_counts).mark_circle(opacity=0.7, color='crimson').encode(
    longitude='Longitude:Q',
    latitude='Latitude:Q',
    size=alt.Size('Incident Count:Q', scale=alt.Scale(domain=[0, 100], range=[10, 1000]), legend=alt.Legend(title="Incident Count")),
    tooltip=['Country:N', 'Incident Count:Q', 'Year:O']
).transform_filter(
    alt.datum.Year == year_select
)

chart = (base + year_bubbles).add_params(year_select)

chart
```

The interactive world map reveals that during peak years, Central and East Africa—particularly regions like Sudan, Afghanistan, and Somalia—experience dense clusters of incidents. Simultaneously, Syria, South Sudan and the Democratic Republic of Congo becomes another major hotspot near these years. These spatial patterns coincide with areas undergoing protracted conflicts, civil unrest, or fragile governance — all conditions that intensify risks for aid operations.

In October 2024, multiple humanitarian organizations raised alarms about intensifying conflict in Sudan, escalations in Gaza and the West Bank, and displacement crises in the Sahel region. Earlier in May and June 2024, the worsening situation in eastern DRC, rising militant activity in Somalia, and flood-related displacement in South Asia contributed to an uptick in aid-related field activity — often a factor that increases exposure to risk.

Looking back to July 2019, the spike in incidents aligns with a particularly violent period in Afghanistan, the ongoing civil unrest in Venezuela, and attacks on medical convoys responding to Ebola outbreaks in the DRC.

These spikes underscore how the heatmap doesn't just reflect abstract data, but closely aligns with real-world crises. Humanitarian incidents are deeply embedded in the larger geopolitical landscape — and the timing of these surges can serve as a proxy for global instability.

## Behind Every Data Point, a Human Story

This exploration into global humanitarian incidents reveals not just patterns in data, but a deeper story of growing risk, unequal burden, and systemic vulnerability. From the clusters of violence in Central Africa and the Middle East to the growing number of attacks since 2005, the data points to a world where aid work is increasingly dangerous — especially in regions most in need of assistance.

The breakdown of victims by nationality and gender shows that nationals bear the heaviest toll, often with little visibility, and that gaps in reporting leave entire groups underrepresented. Organizations like INGOs and local NGOs are on the front lines, so too are the UN that may lack the same resources or protections. The temporal and geographic spikes in incidents correlate strongly with real-world crises — proof that humanitarian safety is inseparable from the global political landscape.

Ultimately, these visualizations underscore a central truth: every data point represents a person, a mission, a risk taken in the name of help. By better understanding where, when, and how humanitarian actors are under threat, we take a small but important step toward building a world where they can do their work with greater safety, dignity, and support.